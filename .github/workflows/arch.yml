name: ArchLinux Builder
on:
  push:
env:
  USER: root
  LOGNAME: root
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
      - id: matrix
        name: Matrix
        shell: bash
        run: |
          array=""
          while IFS= read -r line
          do
            if [[ ! -n "$array" ]]
            then
              array='"'$line'"'
            else
              array=$array", "'"'$line'"'
            fi
          done < "repos"
          echo "::set-output name=value::[$array]"
  build:
    container:
      image: ghcr.io/justforlxz/deepin-builder-docker/archlinux:master
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - /etc/machine-id:/etc/machine-id
    needs: [ setup ]
    continue-on-error: true
    strategy:
      matrix:
        pkg: ${{fromJson(needs.setup.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.pull_request.head.sha }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'push' }}
      - run: |
          git clone https://github.com/linuxdeepin/${{ matrix.pkg }}
      - name: Get package version
        id: version
        env:
          sha: ${{ github.event.pull_request.head.sha }}
          PKG: ${{ matrix.pkg }}
        run: |
          if [ "${sha}" != "" ]
          then
            echo "::set-output name=VERSION::1.0.0"
          else
            cd ${PKG}
            tag=$(git describe --tags | cut -f1 -d '-') || echo
            num=$(git describe --tags | cut -f2 -d '-') || echo
            version=${tag:-0.0.0}+r${num}+g$(git rev-parse --short HEAD)
            echo "::set-output name=VERSION::${version}"
          fi
      - name: Compress Source
        env:
          workdir: ${{ github.workspace }}/${{ matrix.pkg }}
          repo: ${{ matrix.pkg }}
        run: /compress $workdir $repo
      - name: Build
        run: /build $workdir $repo $version
        env:
          workdir: ${{ github.workspace }}/${{ matrix.pkg }}
          repo: ${{ matrix.pkg }}
          version: ${{ steps.version.outputs.VERSION }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: arch
          path: ${{ github.workspace }}/${{ matrix.pkg }}/*.zst
